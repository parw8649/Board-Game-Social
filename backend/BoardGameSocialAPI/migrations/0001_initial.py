# Generated by Django 3.2.8 on 2021-12-06 22:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('dateTime', models.DateTimeField(db_column='dateTime', default=django.utils.timezone.now)),
                ('description', models.TextField(db_column='description', default='No description')),
                ('hostedGames', models.IntegerField(db_column='hostedGames', default=0)),
                ('hostUserId', models.ForeignKey(db_column='hostUserId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameTitle', models.CharField(db_column='gameTitle', max_length=200)),
                ('genre', models.CharField(db_column='genre', max_length=20)),
                ('minPlayer', models.IntegerField(db_column='minPlayer')),
                ('maxPlayer', models.IntegerField(db_column='maxPlayer')),
                ('description', models.TextField(db_column='description', default='None')),
                ('imageUrl', models.TextField(db_column='imageUrl', default='None')),
                ('overallPlayCount', models.IntegerField(db_column='overallPlayCount', default=0)),
            ],
            options={
                'db_table': 'game',
            },
        ),
        migrations.CreateModel(
            name='UserToUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userOneId', models.ForeignKey(db_column='userOneId', on_delete=django.db.models.deletion.CASCADE, related_name='userOneId', to=settings.AUTH_USER_MODEL)),
                ('userTwoId', models.ForeignKey(db_column='userTwoId', on_delete=django.db.models.deletion.CASCADE, related_name='userTwoId', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_to_user',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(db_column='content')),
                ('gameId', models.ForeignKey(db_column='gameId', on_delete=django.db.models.deletion.CASCADE, to='BoardGameSocialAPI.game')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(db_column='bio', default='None')),
                ('iconUrl', models.TextField(db_column='iconUrl', default='None')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postBody', models.TextField(db_column='postBody')),
                ('postType', models.CharField(db_column='postType', max_length=20)),
                ('private', models.BooleanField(db_column='private', default=False)),
                ('likes', models.IntegerField(db_column='likes', default=0)),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(db_column='content')),
                ('receiverId', models.ForeignKey(db_column='receiverId', on_delete=django.db.models.deletion.CASCADE, related_name='receiverId', to=settings.AUTH_USER_MODEL)),
                ('senderId', models.ForeignKey(db_column='senderId', on_delete=django.db.models.deletion.CASCADE, related_name='senderId', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='HostedGameToUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameId', models.ForeignKey(db_column='gameId', on_delete=django.db.models.deletion.CASCADE, to='BoardGameSocialAPI.game')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hosted_game_to_user',
            },
        ),
        migrations.CreateModel(
            name='HostedGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seatsAvailable', models.IntegerField(db_column='seatsAvailable')),
                ('eventId', models.ForeignKey(db_column='eventId', on_delete=django.db.models.deletion.CASCADE, to='BoardGameSocialAPI.event')),
                ('gameId', models.ForeignKey(db_column='gameId', on_delete=django.db.models.deletion.CASCADE, to='BoardGameSocialAPI.game')),
            ],
            options={
                'db_table': 'hosted_game',
            },
        ),
        migrations.CreateModel(
            name='GameToUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(db_column='private')),
                ('gameId', models.ForeignKey(db_column='gameId', on_delete=django.db.models.deletion.CASCADE, to='BoardGameSocialAPI.game')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'game_to_user',
            },
        ),
        migrations.CreateModel(
            name='EventToUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventId', models.ForeignKey(db_column='eventId', on_delete=django.db.models.deletion.CASCADE, to='BoardGameSocialAPI.event')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'event_to_user',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(db_column='content')),
                ('postId', models.ForeignKey(db_column='postId', on_delete=django.db.models.deletion.CASCADE, to='BoardGameSocialAPI.post')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
    ]
